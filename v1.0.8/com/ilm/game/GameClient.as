package com.ilm.game{	import flash.display.Sprite;	import flash.events.Event;	import com.ilm.game.content.*;	import com.ilm.game.engine.controls.Controls;	import com.ilm.game.engine.objects.GameObject;	import com.ilm.game.engine.objects.MovementHandler;	import com.ilm.game.engine.weapon.Weapons;	public class GameClient extends Sprite	{		private var mainClass:Main;		private var _player:Player;		private var _controls:Controls;		private var _move:MovementHandler = new MovementHandler();		public var gameObjects:Sprite;		private var _object:TestObject;				public function GameClient(passedClass:Main):void		{			mainClass = passedClass;			this.addEventListener(Event.ADDED_TO_STAGE, init);		}		private function init(event:Event):void		{			this.removeEventListener(Event.ADDED_TO_STAGE, init);			trace("game added to stage");			gameObjects = new Sprite  ;			this.addChild(gameObjects);			_controls = new Controls(stage, this);			createPlayer();			createTestObject();									this.addEventListener(Event.ENTER_FRAME, enterFrameHandler);		}		private function enterFrameHandler(event:Event):void		{			_controls.detectKeys(_player);			updateAllPositions();			detectCollisions();		}		private function createTestObject():void		{			_object = new TestObject(0x00FF00,30,0.75,0.9,10,2);			_object.x = 100;			_object.y = 100;			gameObjects.addChild(_object);		}		private function createPlayer():void		{			_player = new Player(Weapons.PISTOL,0xFF00FF,10,0.75,0.9,10,1);			_player.x = stage.stageWidth / 2 - _player.width / 2;			_player.y = stage.stageHeight / 2 - _player.height / 2;			gameObjects.addChild(_player);		}		private function updateAllPositions():void		{			for (var n = 0; n < gameObjects.numChildren; n++) {				var object:* = gameObjects.getChildAt(n);				_move.update(object);			}		}		private function detectCollisions():void		{			for (var i = 0; i < gameObjects.numChildren; i++) {				var ball1:* = gameObjects.getChildAt(i);				for (var j = i + 1; j < gameObjects.numChildren; j++) {					var ball2:* = gameObjects.getChildAt(j);					var distX:Number = Math.abs(ball1.x - ball2.x);					var distY:Number = Math.abs(ball1.y - ball2.y);					var distance:Number = Math.sqrt((distX * distX) + (distY * distY));					if (distance <= (ball1.width / 2) + (ball2.width / 2)) {						_move.ballCollision(ball1,ball2);					}				}			}		}	}}